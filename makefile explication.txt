NAME = libft.a #Création d'une variable NAME qui porte le nom du dossier archive(pouvant contenir plusieurs fichier objets(.o))


OBJ_PATH = ./objs/ #OBJ_PATH va prendre la valeur ./objs/ 


SRC_NAME = 		#On va chercher dans le dossier où est le makefile tous les fichiers nommés.
			#On peut ajouter la commande SRC=$(addprefix ft_, $(addsuffix .c,) au tout début afin de marquer seulement le nom du programme et rendre plus lisible le programme.

OBJ_NAME = $(SRC_NAME:.c=.o) #On convertit tout les fichier en .c en fichier objet(.o)

# Files

OBJ = $(addprefix $(OBJ_PATH), $(OBJ_NAME)) #Tout les fichier qui sont attribué dans OBJ_NAME se voient ajouté devant leur nom de fichier OBJ_PATH (./objs/)


CFLAGS = -Wall -Wextra -Werror 	#On crée la variable CFLAGS contenant -Wall -Wextra -Werror afin de pouvoir compiler avec ces flags

CC = gcc $(CFLAGS) 		#On crée la variable CC avec le compilateur gcc afin de pouvoir compilé quand on appliquera les règles du makefile

# Rules

all: $(NAME)

$(NAME): $(OBJ)
	@echo "Creation of $(NAME)... \n" 	#Envoi du message annonçant le début de la création du dossier archive
	@ar rc $(NAME) $(OBJ) 			#On crée une archive (c) nommée NAME(libft.a) et archivé (r) https://linux.die.net/man/1/ar
	@ranlib $(NAME) 			#On indexe l'archive grace a ranlib
	@echo "(NAME) created\n" 		#Message pour indiquer que l'archive fut faite

$(OBJ_PATH)%.o: %.c
	@mkdir $(OBJ_PATH) 2> /dev/null || true
	@$(CC) -o $@ -c $<

clean:
	@echo "Removal of .o files of $(NAME) ..." 	#Envoi du message annonçant la suppression des fichiers archives
	@rm -f $(OBJ) Tous les fichiers 		#Suppression forcée(-f) de tous les fichiers contenus dans OBJ
	@rmdir $(OBJ_PATH) 2> /dev/null || true		
	@echo "Files .o deleted\n"			#Envoi du message annonçant que la suppression est effectuée

fclean: clean
	@echo "Removal of $(NAME)..."			#Envoi du message annonçant la supression du fichier NAME(libft.a)
	@rm -f $(NAME)					#Suppression forcée(-f) du dossier NAME(libft.a)
	@echo "Binary $(NAME) deleted\n"		#Envoi du message annonçant que la suppression est faite

re: fclean all

.PHONY: all, clean, fclean, re

norme:
	norminette $(SRC)
	norminette $(INC_PATH)*.h